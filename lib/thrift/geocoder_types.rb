#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

module YahooWoeType
  UNKNOWN = 0
  TOWN = 7
  ADMIN1 = 8
  ADMIN2 = 9
  ADMIN3 = 10
  POSTAL_CODE = 11
  COUNTRY = 12
  ISLAND = 13
  AIRPORT = 14
  DRAINAGE = 15
  PARK = 16
  POI = 20
  SUBURB = 22
  SPORT = 23
  COLLOQUIAL = 24
  ZONE = 25
  HISTORICAL_STATE = 26
  HISTORICAL_COUNTY = 27
  CONTINENT = 29
  TIMEZONE = 31
  HISTORICAL_TOWN = 35
  STREET = 100
  VALUE_MAP = {0 => "UNKNOWN", 7 => "TOWN", 8 => "ADMIN1", 9 => "ADMIN2", 10 => "ADMIN3", 11 => "POSTAL_CODE", 12 => "COUNTRY", 13 => "ISLAND", 14 => "AIRPORT", 15 => "DRAINAGE", 16 => "PARK", 20 => "POI", 22 => "SUBURB", 23 => "SPORT", 24 => "COLLOQUIAL", 25 => "ZONE", 26 => "HISTORICAL_STATE", 27 => "HISTORICAL_COUNTY", 29 => "CONTINENT", 31 => "TIMEZONE", 35 => "HISTORICAL_TOWN", 100 => "STREET"}
  VALID_VALUES = Set.new([UNKNOWN, TOWN, ADMIN1, ADMIN2, ADMIN3, POSTAL_CODE, COUNTRY, ISLAND, AIRPORT, DRAINAGE, PARK, POI, SUBURB, SPORT, COLLOQUIAL, ZONE, HISTORICAL_STATE, HISTORICAL_COUNTY, CONTINENT, TIMEZONE, HISTORICAL_TOWN, STREET]).freeze
end

module FeatureNameFlags
  PREFERRED = 1
  ABBREVIATION = 2
  DEACCENT = 4
  ALIAS = 8
  LOCAL_LANG = 16
  ALT_NAME = 32
  COLLOQUIAL = 64
  SHORT_NAME = 128
  NEVER_DISPLAY = 256
  LOW_QUALITY = 512
  HISTORIC = 1024
  UNUSED1 = 2048
  UNUSED2 = 4096
  UNUSED3 = 8192
  UNUSED4 = 16384
  VALUE_MAP = {1 => "PREFERRED", 2 => "ABBREVIATION", 4 => "DEACCENT", 8 => "ALIAS", 16 => "LOCAL_LANG", 32 => "ALT_NAME", 64 => "COLLOQUIAL", 128 => "SHORT_NAME", 256 => "NEVER_DISPLAY", 512 => "LOW_QUALITY", 1024 => "HISTORIC", 2048 => "UNUSED1", 4096 => "UNUSED2", 8192 => "UNUSED3", 16384 => "UNUSED4"}
  VALID_VALUES = Set.new([PREFERRED, ABBREVIATION, DEACCENT, ALIAS, LOCAL_LANG, ALT_NAME, COLLOQUIAL, SHORT_NAME, NEVER_DISPLAY, LOW_QUALITY, HISTORIC, UNUSED1, UNUSED2, UNUSED3, UNUSED4]).freeze
end

module GeocodeRelationType
  PARENT = 1
  HIERARCHY = 2
  VALUE_MAP = {1 => "PARENT", 2 => "HIERARCHY"}
  VALID_VALUES = Set.new([PARENT, HIERARCHY]).freeze
end

module NeighborhoodType
  MACRO = 2
  NEIGHBORHOOD = 3
  SUB = 4
  VALUE_MAP = {2 => "MACRO", 3 => "NEIGHBORHOOD", 4 => "SUB"}
  VALID_VALUES = Set.new([MACRO, NEIGHBORHOOD, SUB]).freeze
end

module ResponseIncludes
  EVERYTHING = 0
  PARENTS = 1
  ALL_NAMES = 2
  PARENT_ALL_NAMES = 3
  WKB_GEOMETRY = 4
  WKT_GEOMETRY = 5
  REVGEO_COVERAGE = 6
  DISPLAY_NAME = 7
  WKB_GEOMETRY_SIMPLIFIED = 8
  WKT_GEOMETRY_SIMPLIFIED = 9
  S2_COVERING = 10
  VALUE_MAP = {0 => "EVERYTHING", 1 => "PARENTS", 2 => "ALL_NAMES", 3 => "PARENT_ALL_NAMES", 4 => "WKB_GEOMETRY", 5 => "WKT_GEOMETRY", 6 => "REVGEO_COVERAGE", 7 => "DISPLAY_NAME", 8 => "WKB_GEOMETRY_SIMPLIFIED", 9 => "WKT_GEOMETRY_SIMPLIFIED", 10 => "S2_COVERING"}
  VALID_VALUES = Set.new([EVERYTHING, PARENTS, ALL_NAMES, PARENT_ALL_NAMES, WKB_GEOMETRY, WKT_GEOMETRY, REVGEO_COVERAGE, DISPLAY_NAME, WKB_GEOMETRY_SIMPLIFIED, WKT_GEOMETRY_SIMPLIFIED, S2_COVERING]).freeze
end

module AutocompleteBias
  NONE = 0
  BALANCED = 1
  LOCAL = 2
  GLOBAL = 3
  VALUE_MAP = {0 => "NONE", 1 => "BALANCED", 2 => "LOCAL", 3 => "GLOBAL"}
  VALID_VALUES = Set.new([NONE, BALANCED, LOCAL, GLOBAL]).freeze
end

class GeocodePoint
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LAT = 1
  LNG = 2

  FIELDS = {
    LAT => {:type => ::Thrift::Types::DOUBLE, :name => 'lat'},
    LNG => {:type => ::Thrift::Types::DOUBLE, :name => 'lng'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeBoundingBox
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NE = 1
  SW = 2

  FIELDS = {
    NE => {:type => ::Thrift::Types::STRUCT, :name => 'ne', :class => ::GeocodePoint},
    SW => {:type => ::Thrift::Types::STRUCT, :name => 'sw', :class => ::GeocodePoint}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FeatureId
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SOURCE = 1
  ID = 2

  FIELDS = {
    SOURCE => {:type => ::Thrift::Types::STRING, :name => 'source'},
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FeatureName
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1
  LANG = 2
  FLAGS = 3
  HIGHLIGHTEDNAME = 4

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    LANG => {:type => ::Thrift::Types::STRING, :name => 'lang'},
    FLAGS => {:type => ::Thrift::Types::LIST, :name => 'flags', :default => [
    ], :element => {:type => ::Thrift::Types::I32, :enum_class => ::FeatureNameFlags}, :optional => true},
    HIGHLIGHTEDNAME => {:type => ::Thrift::Types::STRING, :name => 'highlightedName', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FeatureGeometry
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CENTER = 1
  BOUNDS = 2
  WKBGEOMETRY = 3
  WKTGEOMETRY = 4
  WKBGEOMETRYSIMPLIFIED = 5
  WKTGEOMETRYSIMPLIFIED = 6
  DISPLAYBOUNDS = 7
  SOURCE = 8
  S2COVERING = 9

  FIELDS = {
    CENTER => {:type => ::Thrift::Types::STRUCT, :name => 'center', :class => ::GeocodePoint},
    BOUNDS => {:type => ::Thrift::Types::STRUCT, :name => 'bounds', :class => ::GeocodeBoundingBox, :optional => true},
    WKBGEOMETRY => {:type => ::Thrift::Types::STRING, :name => 'wkbGeometry', :binary => true, :optional => true},
    WKTGEOMETRY => {:type => ::Thrift::Types::STRING, :name => 'wktGeometry', :optional => true},
    WKBGEOMETRYSIMPLIFIED => {:type => ::Thrift::Types::STRING, :name => 'wkbGeometrySimplified', :binary => true, :optional => true},
    WKTGEOMETRYSIMPLIFIED => {:type => ::Thrift::Types::STRING, :name => 'wktGeometrySimplified', :optional => true},
    DISPLAYBOUNDS => {:type => ::Thrift::Types::STRUCT, :name => 'displayBounds', :class => ::GeocodeBoundingBox, :optional => true},
    SOURCE => {:type => ::Thrift::Types::STRING, :name => 'source', :optional => true},
    S2COVERING => {:type => ::Thrift::Types::LIST, :name => 's2Covering', :element => {:type => ::Thrift::Types::I64}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeRelation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RELATIONTYPE = 1
  RELATEDID = 2

  FIELDS = {
    RELATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'relationType', :optional => true, :enum_class => ::GeocodeRelationType},
    RELATEDID => {:type => ::Thrift::Types::STRING, :name => 'relatedId', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @relationType.nil? || ::GeocodeRelationType::VALID_VALUES.include?(@relationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field relationType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeFeatureAttributes
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ADM0CAP = 1
  ADM1CAP = 2
  SCALERANK = 3
  LABELRANK = 4
  NATSCALE = 5
  POPULATION = 6
  SOCIALLYRELEVANT = 7
  NEIGHBORHOODTYPE = 8
  URLS = 9
  WORLDCITY = 10

  FIELDS = {
    ADM0CAP => {:type => ::Thrift::Types::BOOL, :name => 'adm0cap', :default => false, :optional => true},
    ADM1CAP => {:type => ::Thrift::Types::BOOL, :name => 'adm1cap', :default => false, :optional => true},
    SCALERANK => {:type => ::Thrift::Types::I32, :name => 'scalerank', :default => 20, :optional => true},
    LABELRANK => {:type => ::Thrift::Types::I32, :name => 'labelrank', :default => 0, :optional => true},
    NATSCALE => {:type => ::Thrift::Types::I32, :name => 'natscale', :default => 0, :optional => true},
    POPULATION => {:type => ::Thrift::Types::I32, :name => 'population', :default => 0, :optional => true},
    SOCIALLYRELEVANT => {:type => ::Thrift::Types::BOOL, :name => 'sociallyRelevant', :default => false, :optional => true},
    NEIGHBORHOODTYPE => {:type => ::Thrift::Types::I32, :name => 'neighborhoodType', :optional => true, :enum_class => ::NeighborhoodType},
    URLS => {:type => ::Thrift::Types::LIST, :name => 'urls', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    WORLDCITY => {:type => ::Thrift::Types::BOOL, :name => 'worldcity', :default => false, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @neighborhoodType.nil? || ::NeighborhoodType::VALID_VALUES.include?(@neighborhoodType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field neighborhoodType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ScoringFeatures
  include ::Thrift::Struct, ::Thrift::Struct_Union
  POPULATION = 1
  BOOST = 2
  PARENTIDS = 6
  CANGEOCODE = 5
  HASPOLY = 7
  EXTRARELATIONIDS = 8
  DEPRECATED_PARENTS = 3

  FIELDS = {
    POPULATION => {:type => ::Thrift::Types::I32, :name => 'population', :default => 0, :optional => true},
    BOOST => {:type => ::Thrift::Types::I32, :name => 'boost', :default => 0, :optional => true},
    PARENTIDS => {:type => ::Thrift::Types::LIST, :name => 'parentIds', :default => [
    ], :element => {:type => ::Thrift::Types::I64}, :optional => true},
    CANGEOCODE => {:type => ::Thrift::Types::BOOL, :name => 'canGeocode', :default => true, :optional => true},
    HASPOLY => {:type => ::Thrift::Types::BOOL, :name => 'hasPoly', :default => false, :optional => true},
    EXTRARELATIONIDS => {:type => ::Thrift::Types::LIST, :name => 'extraRelationIds', :default => [
    ], :element => {:type => ::Thrift::Types::I64}, :optional => true},
    DEPRECATED_PARENTS => {:type => ::Thrift::Types::LIST, :name => 'DEPRECATED_parents', :default => [
    ], :element => {:type => ::Thrift::Types::STRING}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeFeature
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CC = 1
  GEOMETRY = 2
  NAME = 3
  DISPLAYNAME = 4
  WOETYPE = 5
  IDS = 6
  NAMES = 7
  ATTRIBUTION = 8
  TIMEZONES = 9
  HIGHLIGHTEDNAME = 11
  MATCHEDNAME = 12
  SLUG = 13
  ID = 14
  ATTRIBUTES = 15
  LONGID = 16
  LONGIDS = 17
  PARENTIDS = 18
  ROLE = 19

  FIELDS = {
    CC => {:type => ::Thrift::Types::STRING, :name => 'cc'},
    GEOMETRY => {:type => ::Thrift::Types::STRUCT, :name => 'geometry', :class => ::FeatureGeometry},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName', :optional => true},
    WOETYPE => {:type => ::Thrift::Types::I32, :name => 'woeType', :default =>     0, :optional => true, :enum_class => ::YahooWoeType},
    IDS => {:type => ::Thrift::Types::LIST, :name => 'ids', :element => {:type => ::Thrift::Types::STRUCT, :class => ::FeatureId}, :optional => true},
    NAMES => {:type => ::Thrift::Types::LIST, :name => 'names', :element => {:type => ::Thrift::Types::STRUCT, :class => ::FeatureName}, :optional => true},
    ATTRIBUTION => {:type => ::Thrift::Types::LIST, :name => 'attribution', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    TIMEZONES => {:type => ::Thrift::Types::LIST, :name => 'timezones', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    HIGHLIGHTEDNAME => {:type => ::Thrift::Types::STRING, :name => 'highlightedName', :optional => true},
    MATCHEDNAME => {:type => ::Thrift::Types::STRING, :name => 'matchedName', :optional => true},
    SLUG => {:type => ::Thrift::Types::STRING, :name => 'slug', :optional => true},
    ID => {:type => ::Thrift::Types::STRING, :name => 'id', :optional => true},
    ATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'attributes', :class => ::GeocodeFeatureAttributes, :optional => true},
    LONGID => {:type => ::Thrift::Types::I64, :name => 'longId', :optional => true},
    LONGIDS => {:type => ::Thrift::Types::LIST, :name => 'longIds', :element => {:type => ::Thrift::Types::I64}, :optional => true},
    PARENTIDS => {:type => ::Thrift::Types::LIST, :name => 'parentIds', :element => {:type => ::Thrift::Types::I64}, :optional => true},
    ROLE => {:type => ::Thrift::Types::I32, :name => 'role', :optional => true, :enum_class => ::YahooWoeType}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @woeType.nil? || ::YahooWoeType::VALID_VALUES.include?(@woeType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field woeType!')
    end
    unless @role.nil? || ::YahooWoeType::VALID_VALUES.include?(@role)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field role!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeFeatures
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FEATURES = 1

  FIELDS = {
    FEATURES => {:type => ::Thrift::Types::LIST, :name => 'features', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeFeature}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeServingFeature
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LONGID = 5
  SCORINGFEATURES = 2
  FEATURE = 3
  PARENTS = 4
  DEPRECATED_ID = 1

  FIELDS = {
    LONGID => {:type => ::Thrift::Types::I64, :name => 'longId'},
    SCORINGFEATURES => {:type => ::Thrift::Types::STRUCT, :name => 'scoringFeatures', :class => ::ScoringFeatures},
    FEATURE => {:type => ::Thrift::Types::STRUCT, :name => 'feature', :class => ::GeocodeFeature},
    PARENTS => {:type => ::Thrift::Types::LIST, :name => 'parents', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeFeature}, :optional => true},
    DEPRECATED_ID => {:type => ::Thrift::Types::STRING, :name => 'DEPRECATED_id', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class InterpretationScoringFeatures
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PERCENTOFREQUESTCOVERED = 2
  PERCENTOFFEATURECOVERED = 3
  FEATURETOREQUESTCENTERDISTANCE = 4

  FIELDS = {
    PERCENTOFREQUESTCOVERED => {:type => ::Thrift::Types::DOUBLE, :name => 'percentOfRequestCovered', :default => 0, :optional => true},
    PERCENTOFFEATURECOVERED => {:type => ::Thrift::Types::DOUBLE, :name => 'percentOfFeatureCovered', :default => 0, :optional => true},
    FEATURETOREQUESTCENTERDISTANCE => {:type => ::Thrift::Types::DOUBLE, :name => 'featureToRequestCenterDistance', :default => 0, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DebugScoreComponent
  include ::Thrift::Struct, ::Thrift::Struct_Union
  KEY = 1
  VALUE = 2

  FIELDS = {
    KEY => {:type => ::Thrift::Types::STRING, :name => 'key'},
    VALUE => {:type => ::Thrift::Types::I32, :name => 'value'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field key is unset!') unless @key
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field value is unset!') unless @value
  end

  ::Thrift::Struct.generate_accessors self
end

class InterpretationDebugInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SCORECOMPONENTS = 1
  FINALSCORE = 2

  FIELDS = {
    SCORECOMPONENTS => {:type => ::Thrift::Types::LIST, :name => 'scoreComponents', :element => {:type => ::Thrift::Types::STRUCT, :class => ::DebugScoreComponent}, :optional => true},
    FINALSCORE => {:type => ::Thrift::Types::I32, :name => 'finalScore', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeInterpretation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  WHAT = 1
  WHERE = 2
  FEATURE = 3
  PARENTS = 4
  SCORINGFEATURES_DEPRECATED = 5
  SCORES = 6
  DEBUGINFO = 7
  PARENTLONGIDS = 8

  FIELDS = {
    WHAT => {:type => ::Thrift::Types::STRING, :name => 'what', :optional => true},
    WHERE => {:type => ::Thrift::Types::STRING, :name => 'where', :optional => true},
    FEATURE => {:type => ::Thrift::Types::STRUCT, :name => 'feature', :class => ::GeocodeFeature},
    PARENTS => {:type => ::Thrift::Types::LIST, :name => 'parents', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeFeature}, :optional => true},
    SCORINGFEATURES_DEPRECATED => {:type => ::Thrift::Types::STRUCT, :name => 'scoringFeatures_DEPRECATED', :class => ::ScoringFeatures, :optional => true},
    SCORES => {:type => ::Thrift::Types::STRUCT, :name => 'scores', :class => ::InterpretationScoringFeatures, :optional => true},
    DEBUGINFO => {:type => ::Thrift::Types::STRUCT, :name => 'debugInfo', :class => ::InterpretationDebugInfo, :optional => true},
    PARENTLONGIDS => {:type => ::Thrift::Types::LIST, :name => 'parentLongIds', :element => {:type => ::Thrift::Types::I64}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  INTERPRETATIONS = 1
  DEBUGLINES = 2
  REQUESTWKTGEOMETRY = 3

  FIELDS = {
    INTERPRETATIONS => {:type => ::Thrift::Types::LIST, :name => 'interpretations', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeInterpretation}},
    DEBUGLINES => {:type => ::Thrift::Types::LIST, :name => 'debugLines', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    REQUESTWKTGEOMETRY => {:type => ::Thrift::Types::STRING, :name => 'requestWktGeometry', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GeocodeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  QUERY = 1
  CC = 2
  LANG = 3
  LL = 4
  FULL_DEPRECATED = 5
  DEBUG = 6
  AUTOCOMPLETE = 7
  WOEHINT = 8
  WOERESTRICT = 9
  BOUNDS = 10
  SLUG = 11
  INCLUDEPOLYGON_DEPRECATED = 12
  RADIUS = 14
  MAXINTERPRETATIONS = 16
  ALLOWEDSOURCES = 17
  RESPONSEINCLUDES = 18
  STRICT = 19
  AUTOCOMPLETEBIAS = 20

  FIELDS = {
    QUERY => {:type => ::Thrift::Types::STRING, :name => 'query', :optional => true},
    CC => {:type => ::Thrift::Types::STRING, :name => 'cc', :optional => true},
    LANG => {:type => ::Thrift::Types::STRING, :name => 'lang', :default => %q"en", :optional => true},
    LL => {:type => ::Thrift::Types::STRUCT, :name => 'll', :class => ::GeocodePoint, :optional => true},
    FULL_DEPRECATED => {:type => ::Thrift::Types::BOOL, :name => 'full_DEPRECATED', :default => false, :optional => true},
    DEBUG => {:type => ::Thrift::Types::I32, :name => 'debug', :default => 0, :optional => true},
    AUTOCOMPLETE => {:type => ::Thrift::Types::BOOL, :name => 'autocomplete', :default => false, :optional => true},
    WOEHINT => {:type => ::Thrift::Types::LIST, :name => 'woeHint', :default => [
    ], :element => {:type => ::Thrift::Types::I32, :enum_class => ::YahooWoeType}, :optional => true},
    WOERESTRICT => {:type => ::Thrift::Types::LIST, :name => 'woeRestrict', :default => [
    ], :element => {:type => ::Thrift::Types::I32, :enum_class => ::YahooWoeType}, :optional => true},
    BOUNDS => {:type => ::Thrift::Types::STRUCT, :name => 'bounds', :class => ::GeocodeBoundingBox, :optional => true},
    SLUG => {:type => ::Thrift::Types::STRING, :name => 'slug', :optional => true},
    INCLUDEPOLYGON_DEPRECATED => {:type => ::Thrift::Types::BOOL, :name => 'includePolygon_DEPRECATED', :default => false, :optional => true},
    RADIUS => {:type => ::Thrift::Types::I32, :name => 'radius', :default => 0, :optional => true},
    MAXINTERPRETATIONS => {:type => ::Thrift::Types::I32, :name => 'maxInterpretations', :default => 0, :optional => true},
    ALLOWEDSOURCES => {:type => ::Thrift::Types::LIST, :name => 'allowedSources', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    RESPONSEINCLUDES => {:type => ::Thrift::Types::LIST, :name => 'responseIncludes', :default => [
    ], :element => {:type => ::Thrift::Types::I32, :enum_class => ::ResponseIncludes}, :optional => true},
    STRICT => {:type => ::Thrift::Types::BOOL, :name => 'strict', :default => false, :optional => true},
    AUTOCOMPLETEBIAS => {:type => ::Thrift::Types::I32, :name => 'autocompleteBias', :default =>     1, :optional => true, :enum_class => ::AutocompleteBias}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @autocompleteBias.nil? || ::AutocompleteBias::VALID_VALUES.include?(@autocompleteBias)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field autocompleteBias!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CommonGeocodeRequestParams
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEBUG = 1
  WOEHINT = 2
  WOERESTRICT = 3
  CC = 4
  LANG = 5
  RESPONSEINCLUDES = 6
  ALLOWEDSOURCES = 7
  LLHINT = 8
  BOUNDS = 9
  MAXINTERPRETATIONS = 10

  FIELDS = {
    DEBUG => {:type => ::Thrift::Types::I32, :name => 'debug', :default => 0, :optional => true},
    WOEHINT => {:type => ::Thrift::Types::LIST, :name => 'woeHint', :default => [
    ], :element => {:type => ::Thrift::Types::I32, :enum_class => ::YahooWoeType}, :optional => true},
    WOERESTRICT => {:type => ::Thrift::Types::LIST, :name => 'woeRestrict', :default => [
    ], :element => {:type => ::Thrift::Types::I32, :enum_class => ::YahooWoeType}, :optional => true},
    CC => {:type => ::Thrift::Types::STRING, :name => 'cc', :optional => true},
    LANG => {:type => ::Thrift::Types::STRING, :name => 'lang', :default => %q"en", :optional => true},
    RESPONSEINCLUDES => {:type => ::Thrift::Types::LIST, :name => 'responseIncludes', :default => [
    ], :element => {:type => ::Thrift::Types::I32, :enum_class => ::ResponseIncludes}, :optional => true},
    ALLOWEDSOURCES => {:type => ::Thrift::Types::LIST, :name => 'allowedSources', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    LLHINT => {:type => ::Thrift::Types::STRUCT, :name => 'llHint', :class => ::GeocodePoint, :optional => true},
    BOUNDS => {:type => ::Thrift::Types::STRUCT, :name => 'bounds', :class => ::GeocodeBoundingBox, :optional => true},
    MAXINTERPRETATIONS => {:type => ::Thrift::Types::I32, :name => 'maxInterpretations', :default => 0, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BulkReverseGeocodeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LATLNGS = 1
  PARAMS = 2

  FIELDS = {
    LATLNGS => {:type => ::Thrift::Types::LIST, :name => 'latlngs', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodePoint}, :optional => true},
    PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'params', :class => ::CommonGeocodeRequestParams, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BulkReverseGeocodeResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEPRECATED_INTERPRETATIONMAP = 1
  INTERPRETATIONS = 3
  INTERPRETATIONINDEXES = 4
  PARENTFEATURES = 5
  DEBUGLINES = 2

  FIELDS = {
    DEPRECATED_INTERPRETATIONMAP => {:type => ::Thrift::Types::MAP, :name => 'DEPRECATED_interpretationMap', :key => {:type => ::Thrift::Types::I32}, :value => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeInterpretation}}},
    INTERPRETATIONS => {:type => ::Thrift::Types::LIST, :name => 'interpretations', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeInterpretation}},
    INTERPRETATIONINDEXES => {:type => ::Thrift::Types::LIST, :name => 'interpretationIndexes', :element => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::I32}}},
    PARENTFEATURES => {:type => ::Thrift::Types::LIST, :name => 'parentFeatures', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeFeature}, :optional => true},
    DEBUGLINES => {:type => ::Thrift::Types::LIST, :name => 'debugLines', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field DEPRECATED_interpretationMap is unset!') unless @DEPRECATED_interpretationMap
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field interpretations is unset!') unless @interpretations
  end

  ::Thrift::Struct.generate_accessors self
end

class BulkSlugLookupRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SLUGS = 1
  PARAMS = 2

  FIELDS = {
    SLUGS => {:type => ::Thrift::Types::LIST, :name => 'slugs', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    PARAMS => {:type => ::Thrift::Types::STRUCT, :name => 'params', :class => ::CommonGeocodeRequestParams, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BulkSlugLookupResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  INTERPRETATIONS = 1
  INTERPRETATIONINDEXES = 2
  PARENTFEATURES = 4
  DEBUGLINES = 3

  FIELDS = {
    INTERPRETATIONS => {:type => ::Thrift::Types::LIST, :name => 'interpretations', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeInterpretation}},
    INTERPRETATIONINDEXES => {:type => ::Thrift::Types::LIST, :name => 'interpretationIndexes', :element => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::I32}}},
    PARENTFEATURES => {:type => ::Thrift::Types::LIST, :name => 'parentFeatures', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GeocodeFeature}, :optional => true},
    DEBUGLINES => {:type => ::Thrift::Types::LIST, :name => 'debugLines', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field interpretations is unset!') unless @interpretations
  end

  ::Thrift::Struct.generate_accessors self
end

class RefreshStoreRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOKEN = 1

  FIELDS = {
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RefreshStoreResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SUCCESS = 1

  FIELDS = {
    SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class S2CellInfoRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CELLIDSASSTRINGS = 1

  FIELDS = {
    CELLIDSASSTRINGS => {:type => ::Thrift::Types::LIST, :name => 'cellIdsAsStrings', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class S2CellIdInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  LEVEL = 2
  WKTGEOMETRY = 3

  FIELDS = {
    ID => {:type => ::Thrift::Types::I64, :name => 'id', :optional => true},
    LEVEL => {:type => ::Thrift::Types::I32, :name => 'level', :optional => true},
    WKTGEOMETRY => {:type => ::Thrift::Types::STRING, :name => 'wktGeometry', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class S2CellInfoResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CELLINFOS = 1

  FIELDS = {
    CELLINFOS => {:type => ::Thrift::Types::LIST, :name => 'cellInfos', :default => [
    ], :element => {:type => ::Thrift::Types::STRUCT, :class => ::S2CellIdInfo}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end
